package com.iqera.demo;

import com.samskivert.mustache.Mustache;
import com.samskivert.mustache.Template;
import gg.jte.ContentType;
import gg.jte.TemplateEngine;
import gg.jte.output.StringOutput;
import io.pebbletemplates.pebble.PebbleEngine;
import io.pebbletemplates.pebble.template.PebbleTemplate;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import java.io.IOException;
import java.io.StringWriter;
import java.util.Map;

@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}




	@Bean
	public TemplateEngine jteTemplateEngine() {

		return TemplateEngine.createPrecompiled(ContentType.Html);

	}


	@RestController
	static class DemoController {

		Mustache.Compiler mustacheCompiler;
		TemplateEngine jteTemplateEngine;
		PebbleEngine pebbleEngine;


		public DemoController(Mustache.Compiler mustacheCompiler, TemplateEngine jteTemplateEngine, PebbleEngine pebbleEngine) {
			this.mustacheCompiler = mustacheCompiler;
			this.jteTemplateEngine = jteTemplateEngine;
			this.pebbleEngine = pebbleEngine;
		}

		@PostMapping("/generate")
		public String generate(@RequestBody Object object) {


			Template template = mustacheCompiler.loadTemplate("NP_M_TE_MFA_A1_PLA_1") ;

			return template.execute(object);


		}


		@PostMapping("/jte")
		public String jte(@RequestBody Map<String,Object> model) {




			// Prepare the data model
//			Map<String, Object> model = new HashMap<>();
//			model.put("title", "Welcome Page");
//			model.put("heading", "Hello, World!");
//			model.put("message", "This is a sample message generated by JTE.");

			// Render the template
			StringOutput output = new StringOutput();
			jteTemplateEngine.render("firsttest.jte", model, output);


			return output.toString();


		}


		@PostMapping("/pebble")
		public String pebble(@RequestBody Map<String,Object> model) throws IOException {




			// Prepare the data model
//			Map<String, Object> model = new HashMap<>();
//			model.put("title", "Welcome Page");
//			model.put("heading", "Hello, World!");
//			model.put("message", "This is a sample message generated by JTE.");

			//get email.template

			String templateName = ((Map)model.get("email")).get("template").toString();

			// Render the template
			PebbleTemplate template = pebbleEngine.getTemplate(templateName);
			StringWriter sw = new StringWriter();
			template.evaluate(sw, model);

			return sw.toString();


		}


	}


}
